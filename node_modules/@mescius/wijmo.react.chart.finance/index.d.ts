/*!
    *
    * Wijmo Library 5.20242.21
    * https://developer.mescius.com/wijmo
    *
    * Copyright(c) MESCIUS inc. All rights reserved.
    *
    * Licensed under the End-User License Agreement For MESCIUS Wijmo Software.
    * us.sales@mescius.com
    * https://developer.mescius.com/wijmo/licensing
    *
    */
/**
 * {@module wijmo.react.chart.finance}
 * Contains React components for the <b>wijmo.chart.finance</b> module.
 */
/**
 *
 */
export declare var ___keepComment: any;
import { WjRef } from '@mescius/wijmo.react.base';
import { FlexChartCoreEvents, FlexChartCoreInputs, SeriesBaseEvents, SeriesBaseInputs } from '@mescius/wijmo.react.chart';
import * as React from 'react';
import * as wjcChartFinance from '@mescius/wijmo.chart.finance';
export declare type FinancialChartInputs = FlexChartCoreInputs & {
    chartType?: wjcChartFinance.FinancialChartType | string;
    options?: any;
    tooltipContent?: any;
    labelContent?: any;
};
export declare type FinancialChartEvents<T> = FlexChartCoreEvents<T> & {};
export declare const FinancialChartMeta: {
    inputs: string[];
    events: string[];
};
export declare type FinancialChartProps = FinancialChartInputs & FinancialChartEvents<wjcChartFinance.FinancialChart>;
export declare type FinancialChartRef = WjRef<wjcChartFinance.FinancialChart>;
/**
 * React component for the {@link wijmo.chart.finance.FinancialChart} control.
 *
 * The <b>financial-chart</b> component may contain
 * the following child components:
 * {@link wijmo.react.chart.analytics.FlexChartTrendLine}
 * , {@link wijmo.react.chart.analytics.FlexChartMovingAverage}
 * , {@link wijmo.react.chart.analytics.FlexChartYFunctionSeries}
 * , {@link wijmo.react.chart.analytics.FlexChartParametricFunctionSeries}
 * , {@link wijmo.react.chart.analytics.FlexChartWaterfall}
 * , {@link wijmo.react.chart.analytics.FlexChartBoxWhisker}
 * , {@link wijmo.react.chart.animation.FlexChartAnimation}
 * , {@link wijmo.react.chart.annotation.FlexChartAnnotationLayer}
 * , {@link wijmo.react.chart.finance.analytics.FlexChartFibonacci}
 * , {@link wijmo.react.chart.finance.analytics.FlexChartFibonacciArcs}
 * , {@link wijmo.react.chart.finance.analytics.FlexChartFibonacciFans}
 * , {@link wijmo.react.chart.finance.analytics.FlexChartFibonacciTimeZones}
 * , {@link wijmo.react.chart.finance.analytics.FlexChartAtr}
 * , {@link wijmo.react.chart.finance.analytics.FlexChartCci}
 * , {@link wijmo.react.chart.finance.analytics.FlexChartRsi}
 * , {@link wijmo.react.chart.finance.analytics.FlexChartWilliamsR}
 * , {@link wijmo.react.chart.finance.analytics.FlexChartMacd}
 * , {@link wijmo.react.chart.finance.analytics.FlexChartMacdHistogram}
 * , {@link wijmo.react.chart.finance.analytics.FlexChartStochastic}
 * , {@link wijmo.react.chart.finance.analytics.FlexChartBollingerBands}
 * , {@link wijmo.react.chart.finance.analytics.FlexChartEnvelopes}
 * , {@link wijmo.react.chart.finance.FinancialChartSeries}
 * , {@link wijmo.react.chart.interaction.FlexChartRangeSelector}
 * , {@link wijmo.react.chart.interaction.FlexChartGestures}
 * , {@link wijmo.react.chart.FlexChartAxis}
 * , {@link wijmo.react.chart.FlexChartLegend}
 * , {@link wijmo.react.chart.FlexChartLineMarker}
 * and {@link wijmo.react.chart.FlexChartPlotArea}.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.chart.finance.FinancialChart} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const FinancialChart: React.ForwardRefExoticComponent<FinancialChartProps>;
export declare type FinancialChartSeriesInputs = SeriesBaseInputs & {
    chartType?: wjcChartFinance.FinancialChartType | string;
};
export declare type FinancialChartSeriesEvents<T> = SeriesBaseEvents<T> & {};
export declare const FinancialChartSeriesMeta: {
    inputs: string[];
    events: string[];
};
export declare type FinancialChartSeriesProps = FinancialChartSeriesInputs & FinancialChartSeriesEvents<wjcChartFinance.FinancialSeries>;
export declare type FinancialChartSeriesRef = WjRef<wjcChartFinance.FinancialSeries>;
/**
 * React component for the {@link wijmo.chart.finance.FinancialSeries} class.
 *
 * The <b>financial-chart-series</b> component should be contained in
 * a {@link wijmo.react.chart.finance.FinancialChart} component.
 *
 * The <b>financial-chart-series</b> component may contain
 * a {@link wijmo.react.chart.FlexChartAxis} child component.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.chart.finance.FinancialSeries} class it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const FinancialChartSeries: React.ForwardRefExoticComponent<FinancialChartSeriesProps>;
