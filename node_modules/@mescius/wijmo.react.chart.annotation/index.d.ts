/*!
    *
    * Wijmo Library 5.20242.21
    * https://developer.mescius.com/wijmo
    *
    * Copyright(c) MESCIUS inc. All rights reserved.
    *
    * Licensed under the End-User License Agreement For MESCIUS Wijmo Software.
    * us.sales@mescius.com
    * https://developer.mescius.com/wijmo/licensing
    *
    */
/**
 * {@module wijmo.react.chart.annotation}
 * Contains React components for the <b>wijmo.chart.annotation</b> module.
 */
/**
 *
 */
export declare var ___keepComment: any;
import { BaseInputs, WjRef } from '@mescius/wijmo.react.base';
import { DataPoint } from '@mescius/wijmo.chart';
import * as React from 'react';
import * as wjcCore from '@mescius/wijmo';
import * as wjcChartAnnotation from '@mescius/wijmo.chart.annotation';
export declare type FlexChartAnnotationLayerInputs = BaseInputs & {
    children?: any;
    items?: any[];
};
export declare type FlexChartAnnotationLayerEvents<T> = {};
export declare const FlexChartAnnotationLayerMeta: {
    inputs: string[];
    events: any[];
};
export declare type FlexChartAnnotationLayerProps = FlexChartAnnotationLayerInputs & FlexChartAnnotationLayerEvents<wjcChartAnnotation.AnnotationLayer>;
export declare type FlexChartAnnotationLayerRef = WjRef<wjcChartAnnotation.AnnotationLayer>;
/**
 * React component for the {@link wijmo.chart.annotation.AnnotationLayer} class.
 *
 * The <b>flex-chart-annotation-layer</b> component should be contained in
 * one of the following components:
 * {@link wijmo.react.chart.FlexChart}
 *  or {@link wijmo.react.chart.finance.FinancialChart}.
 *
 * The <b>flex-chart-annotation-layer</b> component may contain
 * a {@link wijmo.react.chart.annotation.FlexChartAnnotation} child component.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.chart.annotation.AnnotationLayer} class it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const FlexChartAnnotationLayer: React.ForwardRefExoticComponent<FlexChartAnnotationLayerProps>;
export declare type FlexChartAnnotationInputs = BaseInputs & {
    children?: any;
    [key: string]: any;
};
export declare type FlexChartAnnotationEvents = {};
export declare const FlexChartAnnotationMeta: {
    inputs: string[];
    events: any[];
};
export declare type FlexChartAnnotationProps = FlexChartAnnotationInputs & FlexChartAnnotationEvents;
export declare type FlexChartAnnotationRef = WjRef<any>;
/**
  * React component that represents objects inherited from the
  * {@link wijmo.chart.annotation.AnnotationBase} class.
  *
  * The <b>flex-chart-annotation</b> component should be contained in
  * a {@link wijmo.react.chart.annotation.FlexChartAnnotationLayer} component.
  *
  * The <b>flex-chart-annotation</b> component may contain
  * a {@link wijmo.react.chart.FlexChartDataPoint} child component.
  *
  * The component supports all properties and events of the pure JavaScript {@link } class it represents.
  *
  * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
  * You can use this event to perform further initialization in addition to setting properties in JSX.
  * The signature of the handler function is the same as any other Wijmo event handlers.
  */
export declare const FlexChartAnnotation: React.ForwardRefExoticComponent<FlexChartAnnotationProps>;
export declare type FlexChartAnnotationBaseInputs = BaseInputs & {
    attachment?: wjcChartAnnotation.AnnotationAttachment | string;
    isVisible?: boolean;
    name?: string;
    offset?: wjcCore.Point;
    point?: DataPoint;
    pointIndex?: number;
    position?: wjcChartAnnotation.AnnotationPosition | string;
    seriesIndex?: number;
    style?: any;
    tooltip?: string;
    children?: any;
};
export declare type FlexChartAnnotationBaseEvents<T> = {};
export declare const FlexChartAnnotationBaseMeta: {
    inputs: string[];
    events: any[];
};
export declare type FlexChartAnnotationTextInputs = FlexChartAnnotationBaseInputs & {
    text?: string;
};
export declare type FlexChartAnnotationTextEvents<T> = FlexChartAnnotationBaseEvents<T> & {};
export declare const FlexChartAnnotationTextMeta: {
    inputs: string[];
    events: any[];
};
export declare type FlexChartAnnotationTextProps = FlexChartAnnotationTextInputs & FlexChartAnnotationTextEvents<wjcChartAnnotation.Text>;
export declare type FlexChartAnnotationTextRef = WjRef<wjcChartAnnotation.Text>;
/**
 * React component that represents objects inherited from the
 * {@link wijmo.chart.annotation.Text} class.
 *
 * The <b>flex-chart-annotation-text</b> component should be contained in
 * a {@link wijmo.react.chart.annotation.FlexChartAnnotationLayer} component.
 *
 * The <b>flex-chart-annotation</b> component may contain
 * a {@link wijmo.react.chart.FlexChartDataPoint} child component.
 *
 * The component supports all properties and events of the pure JavaScript {@link } class it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const FlexChartAnnotationText: React.ForwardRefExoticComponent<FlexChartAnnotationTextProps>;
export declare type FlexChartAnnotationShapeBaseInputs = FlexChartAnnotationBaseInputs & {
    content?: string;
};
export declare type FlexChartAnnotationShapeBaseEvents<T> = FlexChartAnnotationBaseEvents<T> & {};
export declare const FlexChartAnnotationShapeBaseMeta: {
    inputs: string[];
    events: any[];
};
export declare type FlexChartAnnotationEllipseInputs = FlexChartAnnotationShapeBaseInputs & {
    height?: number;
    width?: number;
};
export declare type FlexChartAnnotationEllipseEvents<T> = FlexChartAnnotationShapeBaseEvents<T> & {};
export declare const FlexChartAnnotationEllipseMeta: {
    inputs: string[];
    events: any[];
};
export declare type FlexChartAnnotationEllipseProps = FlexChartAnnotationEllipseInputs & FlexChartAnnotationEllipseEvents<wjcChartAnnotation.Ellipse>;
export declare type FlexChartAnnotationEllipseRef = WjRef<wjcChartAnnotation.Ellipse>;
/**
 * React component that represents objects inherited from the
 * {@link wijmo.chart.annotation.Ellipse} class.
 *
 * The <b>flex-chart-annotation-ellipse</b> component should be contained in
 * a {@link wijmo.react.chart.annotation.FlexChartAnnotationLayer} component.
 *
 * The <b>flex-chart-annotation</b> component may contain
 * a {@link wijmo.react.chart.FlexChartDataPoint} child component.
 *
 * The component supports all properties and events of the pure JavaScript {@link } class it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const FlexChartAnnotationEllipse: React.ForwardRefExoticComponent<FlexChartAnnotationEllipseProps>;
export declare type FlexChartAnnotationRectangleInputs = FlexChartAnnotationShapeBaseInputs & {
    height?: number;
    width?: number;
};
export declare type FlexChartAnnotationRectangleEvents<T> = FlexChartAnnotationShapeBaseEvents<T> & {};
export declare const FlexChartAnnotationRectangleMeta: {
    inputs: string[];
    events: any[];
};
export declare type FlexChartAnnotationRectangleProps = FlexChartAnnotationRectangleInputs & FlexChartAnnotationRectangleEvents<wjcChartAnnotation.Rectangle>;
export declare type FlexChartAnnotationRectangleRef = WjRef<wjcChartAnnotation.Rectangle>;
/**
 * React component that represents objects inherited from the
 * {@link wijmo.chart.annotation.Rectangle} class.
 *
 * The <b>flex-chart-annotation-rectangle</b> component should be contained in
 * a {@link wijmo.react.chart.annotation.FlexChartAnnotationLayer} component.
 *
 * The <b>flex-chart-annotation</b> component may contain
 * a {@link wijmo.react.chart.FlexChartDataPoint} child component.
 *
 * The component supports all properties and events of the pure JavaScript {@link } class it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const FlexChartAnnotationRectangle: React.ForwardRefExoticComponent<FlexChartAnnotationRectangleProps>;
export declare type FlexChartAnnotationLineInputs = FlexChartAnnotationShapeBaseInputs & {
    end?: Partial<DataPoint>;
    start?: Partial<DataPoint>;
};
export declare type FlexChartAnnotationLineEvents<T> = FlexChartAnnotationShapeBaseEvents<T> & {};
export declare const FlexChartAnnotationLineMeta: {
    inputs: string[];
    events: any[];
};
export declare type FlexChartAnnotationLineProps = FlexChartAnnotationLineInputs & FlexChartAnnotationLineEvents<wjcChartAnnotation.Line>;
export declare type FlexChartAnnotationLineRef = WjRef<wjcChartAnnotation.Line>;
/**
 * React component that represents objects inherited from the
 * {@link wijmo.chart.annotation.Line} class.
 *
 * The <b>flex-chart-annotation-line</b> component should be contained in
 * a {@link wijmo.react.chart.annotation.FlexChartAnnotationLayer} component.
 *
 * The <b>flex-chart-annotation</b> component may contain
 * a {@link wijmo.react.chart.FlexChartDataPoint} child component.
 *
 * The component supports all properties and events of the pure JavaScript {@link } class it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const FlexChartAnnotationLine: React.ForwardRefExoticComponent<FlexChartAnnotationLineProps>;
export declare type FlexChartAnnotationPolygonInputs = FlexChartAnnotationShapeBaseInputs & {
    points?: any[];
};
export declare type FlexChartAnnotationPolygonEvents<T> = FlexChartAnnotationShapeBaseEvents<T> & {};
export declare const FlexChartAnnotationPolygonMeta: {
    inputs: string[];
    events: any[];
};
export declare type FlexChartAnnotationPolygonProps = FlexChartAnnotationPolygonInputs & FlexChartAnnotationPolygonEvents<wjcChartAnnotation.Polygon>;
export declare type FlexChartAnnotationPolygonRef = WjRef<wjcChartAnnotation.Polygon>;
/**
 * React component that represents objects inherited from the
 * {@link wijmo.chart.annotation.Polygon} class.
 *
 * The <b>flex-chart-annotation-ploygon</b> component should be contained in
 * a {@link wijmo.react.chart.annotation.FlexChartAnnotationLayer} component.
 *
 * The <b>flex-chart-annotation</b> component may contain
 * a {@link wijmo.react.chart.FlexChartDataPoint} child component.
 *
 * The component supports all properties and events of the pure JavaScript {@link } class it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const FlexChartAnnotationPolygon: React.ForwardRefExoticComponent<FlexChartAnnotationPolygonProps>;
export declare type FlexChartAnnotationCircleInputs = FlexChartAnnotationShapeBaseInputs & {
    radius?: number;
};
export declare type FlexChartAnnotationCircleEvents<T> = FlexChartAnnotationShapeBaseEvents<T> & {};
export declare const FlexChartAnnotationCircleMeta: {
    inputs: string[];
    events: any[];
};
export declare type FlexChartAnnotationCircleProps = FlexChartAnnotationCircleInputs & FlexChartAnnotationCircleEvents<wjcChartAnnotation.Polygon>;
export declare type FlexChartAnnotationCircleRef = WjRef<wjcChartAnnotation.Polygon>;
/**
 * React component that represents objects inherited from the
 * {@link wijmo.chart.annotation.Circle} class.
 *
 * The <b>flex-chart-annotation-circle</b> component should be contained in
 * a {@link wijmo.react.chart.annotation.FlexChartAnnotationLayer} component.
 *
 * The <b>flex-chart-annotation</b> component may contain
 * a {@link wijmo.react.chart.FlexChartDataPoint} child component.
 *
 * The component supports all properties and events of the pure JavaScript {@link } class it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const FlexChartAnnotationCircle: React.ForwardRefExoticComponent<FlexChartAnnotationCircleProps>;
export declare type FlexChartAnnotationSquareInputs = FlexChartAnnotationShapeBaseInputs & {
    length?: number;
};
export declare type FlexChartAnnotationSquareEvents<T> = FlexChartAnnotationShapeBaseEvents<T> & {};
export declare const FlexChartAnnotationSquareMeta: {
    inputs: string[];
    events: any[];
};
export declare type FlexChartAnnotationSquareProps = FlexChartAnnotationSquareInputs & FlexChartAnnotationSquareEvents<wjcChartAnnotation.Square>;
export declare type FlexChartAnnotationSquareRef = WjRef<wjcChartAnnotation.Square>;
/**
 * React component that represents objects inherited from the
 * {@link wijmo.chart.annotation.Square} class.
 *
 * The <b>flex-chart-annotation-square</b> component should be contained in
 * a {@link wijmo.react.chart.annotation.FlexChartAnnotationLayer} component.
 *
 * The <b>flex-chart-annotation</b> component may contain
 * a {@link wijmo.react.chart.FlexChartDataPoint} child component.
 *
 * The component supports all properties and events of the pure JavaScript {@link } class it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const FlexChartAnnotationSquare: React.ForwardRefExoticComponent<FlexChartAnnotationSquareProps>;
export declare type FlexChartAnnotationImageInputs = FlexChartAnnotationShapeBaseInputs & {
    height?: number;
    width?: number;
    href?: string;
};
export declare type FlexChartAnnotationImageEvents<T> = FlexChartAnnotationShapeBaseEvents<T> & {};
export declare const FlexChartAnnotationImageMeta: {
    inputs: string[];
    events: any[];
};
export declare type FlexChartAnnotationImageProps = FlexChartAnnotationImageInputs & FlexChartAnnotationImageEvents<wjcChartAnnotation.Image>;
export declare type FlexChartAnnotationImageRef = WjRef<wjcChartAnnotation.Image>;
/**
 * React component that represents objects inherited from the
 * {@link wijmo.chart.annotation.Image} class.
 *
 * The <b>flex-chart-annotation-image</b> component should be contained in
 * a {@link wijmo.react.chart.annotation.FlexChartAnnotationLayer} component.
 *
 * The <b>flex-chart-annotation</b> component may contain
 * a {@link wijmo.react.chart.FlexChartDataPoint} child component.
 *
 * The component supports all properties and events of the pure JavaScript {@link } class it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const FlexChartAnnotationImage: React.ForwardRefExoticComponent<FlexChartAnnotationImageProps>;
