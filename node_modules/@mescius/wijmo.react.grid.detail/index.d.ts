/*!
    *
    * Wijmo Library 5.20242.21
    * https://developer.mescius.com/wijmo
    *
    * Copyright(c) MESCIUS inc. All rights reserved.
    *
    * Licensed under the End-User License Agreement For MESCIUS Wijmo Software.
    * us.sales@mescius.com
    * https://developer.mescius.com/wijmo/licensing
    *
    */
/**
 * {@module wijmo.react.grid.detail}
 * Contains React components for the <b>wijmo.grid.detail</b> module.
 */
/**
 *
 */
export declare var ___keepComment: any;
import { BaseInputs, WjRef } from '@mescius/wijmo.react.base';
import * as React from 'react';
import * as wjcGridDetail from '@mescius/wijmo.grid.detail';
export declare type FlexGridDetailInputs = BaseInputs & {
    detailVisibilityMode?: wjcGridDetail.DetailVisibilityMode | string;
    isAnimated?: boolean;
    keyActionEnter?: wjcGridDetail.KeyAction | string;
    maxHeight?: number | null;
    rowHasDetail?: wjcGridDetail.IRowHasDetail;
    template?: any;
};
export declare type FlexGridDetailEvents<T> = {};
export declare const FlexGridDetailMeta: {
    inputs: string[];
    events: any[];
};
export declare type FlexGridDetailProps = FlexGridDetailInputs & FlexGridDetailEvents<wjcGridDetail.FlexGridDetailProvider>;
export declare type FlexGridDetailRef = WjRef<DirectiveFlexGridDetail>;
/**
 * React component for the {@link wijmo.grid.detail.FlexGridDetailProvider} class.
 *
 * The <b>flex-grid-detail</b> component should be contained in
 * a {@link wijmo.react.grid.FlexGrid} component.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.grid.detail.FlexGridDetailProvider} class it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 *
 * The component includes a <b>template</b> property which is used to define template for detail row.
 * The template is a function with single argument. The argument is a plain object with keys of
 * <b>row</b> (the row to which detail row belongs),
 * <b>item</b> (item data related to the row) and
 * <b>provider</b> (FlexGrid control, owner of the row).
 */
export declare const FlexGridDetail: React.ForwardRefExoticComponent<FlexGridDetailProps>;
export declare class DirectiveFlexGridDetail extends wjcGridDetail.FlexGridDetailProvider {
    _templateFn: any;
    renderedCellsCache: any[];
    template: any;
    constructor(grid: any, options: any);
    initialize(props: any): void;
    updateTemplate(): void;
    _createDetailCellFn: (row: any) => HTMLDivElement;
    _disposeDetailCellFn: (row: any) => void;
}
