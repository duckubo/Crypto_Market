/*!
    *
    * Wijmo Library 5.20242.21
    * https://developer.mescius.com/wijmo
    *
    * Copyright(c) MESCIUS inc. All rights reserved.
    *
    * Licensed under the End-User License Agreement For MESCIUS Wijmo Software.
    * us.sales@mescius.com
    * https://developer.mescius.com/wijmo/licensing
    *
    */
/**
 * {@module wijmo.react.barcode.specialized}
 * Contains React components for the <b>wijmo.barcode.specialized</b> module.
 */
/**
 *
 */
export declare var ___keepComment: any;
import { BarcodeBaseEvents, BarcodeBaseInputs } from '@mescius/wijmo.react.barcode.base';
import { LabelPosition, NarrowToWideRatio } from '@mescius/wijmo.barcode';
import * as React from 'react';
import * as wjcReactBase from '@mescius/wijmo.react.base';
import * as wjcBarcodeSpecialized from '@mescius/wijmo.barcode.specialized';
export declare type BarcodeDataMatrixBaseInputs = BarcodeBaseInputs & {};
export declare type BarcodeDataMatrixBaseEvents<T> = BarcodeBaseEvents<T> & {};
export declare const BarcodeDataMatrixBaseMeta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeDataMatrixEcc000Inputs = BarcodeDataMatrixBaseInputs & {
    symbolSize?: wjcBarcodeSpecialized.Ecc000_140SymbolSize;
    version?: wjcBarcodeSpecialized.DataMatrixVersion | string;
};
export declare type BarcodeDataMatrixEcc000Events<T> = BarcodeDataMatrixBaseEvents<T> & {};
export declare const BarcodeDataMatrixEcc000Meta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeDataMatrixEcc000Props = BarcodeDataMatrixEcc000Inputs & BarcodeDataMatrixEcc000Events<wjcBarcodeSpecialized.DataMatrixEcc000>;
export declare type BarcodeDataMatrixEcc000Ref = wjcReactBase.WjRef<wjcBarcodeSpecialized.DataMatrixEcc000>;
/**
 * React component for the {@link wijmo.barcode.specialized.DataMatrixEcc000} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.specialized.DataMatrixEcc000} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeDataMatrixEcc000: React.ForwardRefExoticComponent<BarcodeDataMatrixEcc000Props>;
export declare type BarcodeDataMatrixEcc200Inputs = BarcodeDataMatrixBaseInputs & {
    encodingMode?: wjcBarcodeSpecialized.Ecc200EncodingMode;
    fileIdentifier?: number;
    structureNumber?: number;
    structuredAppend?: boolean;
    symbolSize?: wjcBarcodeSpecialized.Ecc200SymbolSize;
};
export declare type BarcodeDataMatrixEcc200Events<T> = BarcodeDataMatrixBaseEvents<T> & {};
export declare const BarcodeDataMatrixEcc200Meta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeDataMatrixEcc200Props = BarcodeDataMatrixEcc200Inputs & BarcodeDataMatrixEcc200Events<wjcBarcodeSpecialized.DataMatrixEcc200>;
export declare type BarcodeDataMatrixEcc200Ref = wjcReactBase.WjRef<wjcBarcodeSpecialized.DataMatrixEcc200>;
/**
 * React component for the {@link wijmo.barcode.specialized.DataMatrixEcc200} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.specialized.DataMatrixEcc200} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeDataMatrixEcc200: React.ForwardRefExoticComponent<BarcodeDataMatrixEcc200Props>;
export declare type BarcodeCode49Inputs = BarcodeBaseInputs & {
    groupIndex?: number;
    grouping?: boolean;
    labelPosition?: LabelPosition | string;
    showLabel?: boolean;
};
export declare type BarcodeCode49Events<T> = BarcodeBaseEvents<T> & {};
export declare const BarcodeCode49Meta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeCode49Props = BarcodeCode49Inputs & BarcodeCode49Events<wjcBarcodeSpecialized.Code49>;
export declare type BarcodeCode49Ref = wjcReactBase.WjRef<wjcBarcodeSpecialized.Code49>;
/**
 * React component for the {@link wijmo.barcode.specialized.Code49} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.specialized.Code49} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeCode49: React.ForwardRefExoticComponent<BarcodeCode49Props>;
export declare type BarcodeCode93Inputs = BarcodeBaseInputs & {
    autoWidth?: boolean;
    autoWidthZoom?: number;
    checkDigit?: boolean;
    fullAscii?: boolean;
    labelPosition?: LabelPosition | string;
    showLabel?: boolean;
};
export declare type BarcodeCode93Events<T> = BarcodeBaseEvents<T> & {};
export declare const BarcodeCode93Meta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeCode93Props = BarcodeCode93Inputs & BarcodeCode93Events<wjcBarcodeSpecialized.Code93>;
export declare type BarcodeCode93Ref = wjcReactBase.WjRef<wjcBarcodeSpecialized.Code93>;
/**
 * React component for the {@link wijmo.barcode.specialized.Code93} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.specialized.Code93} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeCode93: React.ForwardRefExoticComponent<BarcodeCode93Props>;
export declare type BarcodeItf14Inputs = BarcodeBaseInputs & {
    bearerBar?: boolean;
    labelPosition?: LabelPosition | string;
    nwRatio?: NarrowToWideRatio | string;
    showLabel?: boolean;
};
export declare type BarcodeItf14Events<T> = BarcodeBaseEvents<T> & {};
export declare const BarcodeItf14Meta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeItf14Props = BarcodeItf14Inputs & BarcodeItf14Events<wjcBarcodeSpecialized.Itf14>;
export declare type BarcodeItf14Ref = wjcReactBase.WjRef<wjcBarcodeSpecialized.Itf14>;
/**
 * React component for the {@link wijmo.barcode.specialized.Itf14} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.specialized.Itf14} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeItf14: React.ForwardRefExoticComponent<BarcodeItf14Props>;
export declare type BarcodeInterleaved2of5Inputs = BarcodeBaseInputs & {
    autoWidth?: boolean;
    autoWidthZoom?: number;
    bearerBar?: boolean;
    checkCharacter?: boolean;
    labelPosition?: LabelPosition | string;
    nwRatio?: NarrowToWideRatio | string;
    showLabel?: boolean;
};
export declare type BarcodeInterleaved2of5Events<T> = BarcodeBaseEvents<T> & {};
export declare const BarcodeInterleaved2of5Meta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeInterleaved2of5Props = BarcodeInterleaved2of5Inputs & BarcodeInterleaved2of5Events<wjcBarcodeSpecialized.Interleaved2of5>;
export declare type BarcodeInterleaved2of5Ref = wjcReactBase.WjRef<wjcBarcodeSpecialized.Interleaved2of5>;
/**
 * React component for the {@link wijmo.barcode.specialized.Interleaved2of5} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.specialized.Interleaved2of5} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeInterleaved2of5: React.ForwardRefExoticComponent<BarcodeInterleaved2of5Props>;
export declare type BarcodeJapanesePostalInputs = BarcodeBaseInputs & {
    labelPosition?: LabelPosition | string;
    showLabel?: boolean;
};
export declare type BarcodeJapanesePostalEvents<T> = BarcodeBaseEvents<T> & {};
export declare const BarcodeJapanesePostalMeta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeJapanesePostalProps = BarcodeJapanesePostalInputs & BarcodeJapanesePostalEvents<wjcBarcodeSpecialized.JapanesePostal>;
export declare type BarcodeJapanesePostalRef = wjcReactBase.WjRef<wjcBarcodeSpecialized.JapanesePostal>;
/**
 * React component for the {@link wijmo.barcode.specialized.JapanesePostal} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.specialized.JapanesePostal} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeJapanesePostal: React.ForwardRefExoticComponent<BarcodeJapanesePostalProps>;
