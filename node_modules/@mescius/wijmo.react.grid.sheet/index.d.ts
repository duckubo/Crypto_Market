/*!
    *
    * Wijmo Library 5.20242.21
    * https://developer.mescius.com/wijmo
    *
    * Copyright(c) MESCIUS inc. All rights reserved.
    *
    * Licensed under the End-User License Agreement For MESCIUS Wijmo Software.
    * us.sales@mescius.com
    * https://developer.mescius.com/wijmo/licensing
    *
    */
/**
 * {@module wijmo.react.grid.sheet}
 * Contains React components for the <b>wijmo.grid.sheet</b> module.
 */
/**
 *
 */
export declare var ___keepComment: any;
import { BaseInputs, WjRef } from '@mescius/wijmo.react.base';
import * as React from 'react';
import * as wjcCore from '@mescius/wijmo';
import * as wjcGridSheet from '@mescius/wijmo.grid.sheet';
import * as wjGrid from '@mescius/wijmo.react.grid';
export declare type FlexSheetInputs = wjGrid.FlexGridInputs & {
    allowAutoFill?: boolean;
    calculationPrecision?: number;
    enableDragDrop?: boolean;
    enableFormulas?: boolean;
    isTabHolderVisible?: boolean;
    selectedSheetIndex?: number;
    showFilterIcons?: boolean;
};
export declare type FlexSheetEvents<T> = wjGrid.FlexGridEvents<T> & {
    autoFilled?: wjcCore.IEventHandler<T, wjcGridSheet.AutoFilledEventArgs>;
    autoFilling?: wjcCore.IEventHandler<T, wjcGridSheet.AutoFillingEventArgs>;
    beginDroppingRowColumn?: wjcCore.IEventHandler<T, wjcGridSheet.DroppingRowColumnEventArgs>;
    columnChanged?: wjcCore.IEventHandler<T, wjcGridSheet.RowColumnChangedEventArgs>;
    draggingRowColumn?: wjcCore.IEventHandler<T, wjcGridSheet.DraggingRowColumnEventArgs>;
    droppingRowColumn?: wjcCore.IEventHandler<T, wjcCore.EventArgs>;
    endDroppingRowColumn?: wjcCore.IEventHandler<T, wjcCore.CancelEventArgs>;
    loaded?: wjcCore.IEventHandler<T, wjcCore.EventArgs>;
    prepareChangingColumn?: wjcCore.IEventHandler<T, wjcGridSheet.RowColumnChangedEventArgs>;
    prepareChangingRow?: wjcCore.IEventHandler<T, wjcGridSheet.RowColumnChangedEventArgs>;
    rowChanged?: wjcCore.IEventHandler<T, wjcGridSheet.RowColumnChangedEventArgs>;
    selectedSheetChanged?: wjcCore.IEventHandler<T, wjcCore.PropertyChangedEventArgs>;
    sheetCleared?: wjcCore.IEventHandler<T, wjcCore.EventArgs>;
    unknownFunction?: wjcCore.IEventHandler<T, wjcGridSheet.UnknownFunctionEventArgs>;
};
export declare const FlexSheetMeta: {
    inputs: string[];
    events: string[];
};
export declare type FlexSheetProps = FlexSheetInputs & FlexSheetEvents<wjcGridSheet.FlexSheet>;
export declare type FlexSheetRef = WjRef<wjcGridSheet.FlexSheet>;
/**
 * React component for the {@link wijmo.grid.sheet.FlexSheet} control.
 *
 * The <b>flex-sheet</b> component may contain
 * a {@link wijmo.react.grid.sheet.Sheet} child component.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.grid.sheet.FlexSheet} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const FlexSheet: React.ForwardRefExoticComponent<FlexSheetProps>;
export declare type SheetInputs = BaseInputs & {
    columnCount?: number;
    filterSetting?: wjcGridSheet.IFilterSetting;
    itemsSource?: any;
    name?: string;
    rowCount?: number;
    visible?: boolean;
};
export declare type SheetEvents<T> = {
    nameChanged?: wjcCore.IEventHandler<T, wjcCore.PropertyChangedEventArgs>;
    visibleChanged?: wjcCore.IEventHandler<T, wjcCore.EventArgs>;
};
export declare const SheetMeta: {
    inputs: string[];
    events: string[];
};
export declare type SheetProps = SheetInputs & SheetEvents<wjcGridSheet.Sheet>;
export declare type SheetRef = WjRef<wjcGridSheet.Sheet>;
/**
 * React component for the {@link wijmo.grid.sheet.Sheet} class.
 *
 * The <b>sheet</b> component should be contained in
 * a {@link wijmo.react.grid.sheet.FlexSheet} component.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.grid.sheet.Sheet} class it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const Sheet: React.ForwardRefExoticComponent<SheetProps>;
