/*!
    *
    * Wijmo Library 5.20242.21
    * https://developer.mescius.com/wijmo
    *
    * Copyright(c) MESCIUS inc. All rights reserved.
    *
    * Licensed under the End-User License Agreement For MESCIUS Wijmo Software.
    * us.sales@mescius.com
    * https://developer.mescius.com/wijmo/licensing
    *
    */

import{forwardRef}from"react";import{ControlBaseMeta,useWjComponentBase}from"@mescius/wijmo.react.base";import*as wjGrid from"@mescius/wijmo.react.grid";import*as wjcOlap from"@mescius/wijmo.olap";export var PivotGridMeta={inputs:wjGrid.FlexGridMeta.inputs.concat(["centerHeadersVertically","collapsibleSubtotals","customContextMenu","outlineMode","showColumnFieldHeaders","showDetailOnDoubleClick","showRowFieldHeaders","showRowFieldSort","showValueFieldHeaders"]),events:wjGrid.FlexGridMeta.events.slice()};export var PivotGrid=forwardRef((function(e,t){return useWjComponentBase({ref:t,properties:PivotGridMeta.inputs,events:PivotGridMeta.events,props:e,constructor:wjcOlap.PivotGrid}).renderResult}));export var PivotChartMeta={inputs:ControlBaseMeta.inputs.concat(["chartType","footer","footerStyle","header","headerStyle","itemsSource","legendPosition","maxPoints","maxSeries","showHierarchicalAxes","showLegend","showTitle","showTotals","stacking"]),events:ControlBaseMeta.events.slice()};export var PivotChart=forwardRef((function(e,t){return useWjComponentBase({ref:t,properties:PivotChartMeta.inputs,events:PivotChartMeta.events,props:e,constructor:wjcOlap.PivotChart}).renderResult}));export var PivotPanelMeta={inputs:ControlBaseMeta.inputs.concat(["autoGenerateFields","deferredUpdate","engine","itemsSource","restrictDragging","showFieldIcons","viewDefinition"]),events:ControlBaseMeta.events.concat(["deferredUpdateChanged","itemsSourceChanged","updatedView","updatingView","viewDefinitionChanged"])};export var PivotPanel=forwardRef((function(e,t){return useWjComponentBase({ref:t,properties:PivotPanelMeta.inputs,events:PivotPanelMeta.events,props:e,constructor:wjcOlap.PivotPanel}).renderResult}));export var SlicerMeta={inputs:ControlBaseMeta.inputs.concat(["field","header","multiSelect","showCheckboxes","showHeader"]),events:ControlBaseMeta.events.slice()};export var Slicer=forwardRef((function(e,t){return useWjComponentBase({ref:t,properties:SlicerMeta.inputs,events:SlicerMeta.events,props:e,constructor:wjcOlap.Slicer}).renderResult}));