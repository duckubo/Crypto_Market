/*!
    *
    * Wijmo Library 5.20242.21
    * https://developer.mescius.com/wijmo
    *
    * Copyright(c) MESCIUS inc. All rights reserved.
    *
    * Licensed under the End-User License Agreement For MESCIUS Wijmo Software.
    * us.sales@mescius.com
    * https://developer.mescius.com/wijmo/licensing
    *
    */

import{forwardRef}from"react";import{useWjComponentBase,useWjComponentChildBase}from"@mescius/wijmo.react.base";import{FlexChartBaseMeta}from"@mescius/wijmo.react.chart";import*as wjcChartMap from"@mescius/wijmo.chart.map";export const FlexMapMeta={inputs:[...FlexChartBaseMeta.inputs,"center","zoom","layers","tooltip"],events:[...FlexChartBaseMeta.events]};export const FlexMap=forwardRef((function(e,t){return useWjComponentBase({ref:t,properties:FlexMapMeta.inputs,events:FlexMapMeta.events,props:e,constructor:wjcChartMap.FlexMap,customProps:{tooltipContent:(e,t)=>{e.tooltip&&(e.tooltip.content=t)}}}).renderResult}));export const MapLayerBaseMeta={inputs:["colorScale","itemsSource","style","url"],events:["itemsSourceChanged"]};export const ScatterMapLayerMeta={inputs:[...MapLayerBaseMeta.inputs,"binding","itemsSource","symbolMaxSize","symbolMinSize","symbolSize","url"],events:[...MapLayerBaseMeta.events]};export const ScatterMapLayer=forwardRef((function(e,t){const r=useWjComponentChildBase({ref:t,properties:ScatterMapLayerMeta.inputs,events:ScatterMapLayerMeta.events,props:e,constructor:wjcChartMap.ScatterMapLayer,needParentInstance:!1,parentProp:"layers",isParentPropArray:!0,assignedToParent:!0});return Object.assign({$_wjComponent:!0},r)}));export const GeoMapLayerMeta={inputs:[...MapLayerBaseMeta.inputs,"itemFormatter","symbolSize"],events:[...MapLayerBaseMeta.events]};export const GeoMapLayer=forwardRef((function(e,t){const r=useWjComponentChildBase({ref:t,properties:GeoMapLayerMeta.inputs,events:GeoMapLayerMeta.events,props:e,constructor:wjcChartMap.GeoMapLayer,needParentInstance:!1,parentProp:"layers",isParentPropArray:!0,assignedToParent:!0});return Object.assign({$_wjComponent:!0},r)}));export const GeoGridLayerMeta={inputs:[...MapLayerBaseMeta.inputs],events:[...MapLayerBaseMeta.events]};export const GeoGridLayer=forwardRef((function(e,t){const r=useWjComponentChildBase({ref:t,properties:GeoGridLayerMeta.inputs,events:GeoGridLayerMeta.events,props:e,constructor:wjcChartMap.GeoGridLayer,needParentInstance:!1,parentProp:"layers",isParentPropArray:!0,assignedToParent:!0});return Object.assign({$_wjComponent:!0},r)}));export const ColorScaleMeta={inputs:["binding","colorUnknown","colors","format","scale"],events:[]};export const ColorScale=forwardRef((function(e,t){const r=useWjComponentChildBase({ref:t,properties:ColorScaleMeta.inputs,events:ColorScaleMeta.events,props:e,constructor:wjcChartMap.ColorScale,needParentInstance:!1,parentProp:"colorScale",isParentPropArray:!1,assignedToParent:!0});return Object.assign({$_wjComponent:!0},r)}));