/*!
    *
    * Wijmo Library 5.20242.21
    * https://developer.mescius.com/wijmo
    *
    * Copyright(c) MESCIUS inc. All rights reserved.
    *
    * Licensed under the End-User License Agreement For MESCIUS Wijmo Software.
    * us.sales@mescius.com
    * https://developer.mescius.com/wijmo/licensing
    *
    */
/**
 * {@module wijmo.react.barcode.composite}
 * Contains React components for the <b>wijmo.barcode.composite</b> module.
 */
/**
 *
 */
export declare var ___keepComment: any;
import { BarcodeBaseEvents, BarcodeBaseInputs } from '@mescius/wijmo.react.barcode.base';
import { LabelPosition } from '@mescius/wijmo.barcode';
import * as React from 'react';
import * as wjcReactBase from '@mescius/wijmo.react.base';
import * as wjcBarcodeComposite from '@mescius/wijmo.barcode.composite';
export declare type BarcodeGs1DataBarBaseInputs = BarcodeBaseInputs & {
    hideAiText?: boolean;
    hideLinkageText?: boolean;
    labelPosition?: LabelPosition | string;
    linkage?: string;
    linkageHeight?: string | number;
    linkageVersion?: wjcBarcodeComposite.Gs1DataBarLinkageVersion | string;
    showLabel?: boolean;
};
export declare type BarcodeGs1DataBarBaseEvents<T> = BarcodeBaseEvents<T> & {};
export declare const BarcodeGs1DataBarBaseMeta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeGs1DataBarOmnidirectionalInputs = BarcodeGs1DataBarBaseInputs & {};
export declare type BarcodeGs1DataBarOmnidirectionalEvents<T> = BarcodeGs1DataBarBaseEvents<T> & {};
export declare const BarcodeGs1DataBarOmnidirectionalMeta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeGs1DataBarOmnidirectionalProps = BarcodeGs1DataBarOmnidirectionalInputs & BarcodeGs1DataBarOmnidirectionalEvents<wjcBarcodeComposite.Gs1DataBarOmnidirectional>;
export declare type BarcodeGs1DataBarOmnidirectionalRef = wjcReactBase.WjRef<wjcBarcodeComposite.Gs1DataBarOmnidirectional>;
/**
 * React component for the {@link wijmo.barcode.composite.Gs1DataBarOmnidirectional} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.composite.Gs1DataBarOmnidirectional} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeGs1DataBarOmnidirectional: React.ForwardRefExoticComponent<BarcodeGs1DataBarOmnidirectionalProps>;
export declare type BarcodeGs1DataBarTruncatedInputs = BarcodeGs1DataBarBaseInputs & {};
export declare type BarcodeGs1DataBarTruncatedEvents<T> = BarcodeGs1DataBarBaseEvents<T> & {};
export declare const BarcodeGs1DataBarTruncatedMeta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeGs1DataBarTruncatedProps = BarcodeGs1DataBarTruncatedInputs & BarcodeGs1DataBarTruncatedEvents<wjcBarcodeComposite.Gs1DataBarTruncated>;
export declare type BarcodeGs1DataBarTruncatedRef = wjcReactBase.WjRef<wjcBarcodeComposite.Gs1DataBarTruncated>;
/**
 * React component for the {@link wijmo.barcode.composite.Gs1DataBarTruncated} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.composite.Gs1DataBarTruncated} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeGs1DataBarTruncated: React.ForwardRefExoticComponent<BarcodeGs1DataBarTruncatedProps>;
export declare type BarcodeGs1DataBarStackedInputs = BarcodeGs1DataBarBaseInputs & {
    ratio?: number;
};
export declare type BarcodeGs1DataBarStackedEvents<T> = BarcodeGs1DataBarBaseEvents<T> & {};
export declare const BarcodeGs1DataBarStackedMeta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeGs1DataBarStackedProps = BarcodeGs1DataBarStackedInputs & BarcodeGs1DataBarStackedEvents<wjcBarcodeComposite.Gs1DataBarStacked>;
export declare type BarcodeGs1DataBarStackedRef = wjcReactBase.WjRef<wjcBarcodeComposite.Gs1DataBarStacked>;
/**
 * React component for the {@link wijmo.barcode.composite.Gs1DataBarStacked} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.composite.Gs1DataBarStacked} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeGs1DataBarStacked: React.ForwardRefExoticComponent<BarcodeGs1DataBarStackedProps>;
export declare type BarcodeGs1DataBarStackedOmnidirectionalInputs = BarcodeGs1DataBarBaseInputs & {
    ratio?: number;
};
export declare type BarcodeGs1DataBarStackedOmnidirectionalEvents<T> = BarcodeGs1DataBarBaseEvents<T> & {};
export declare const BarcodeGs1DataBarStackedOmnidirectionalMeta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeGs1DataBarStackedOmnidirectionalProps = BarcodeGs1DataBarStackedOmnidirectionalInputs & BarcodeGs1DataBarStackedOmnidirectionalEvents<wjcBarcodeComposite.Gs1DataBarStackedOmnidirectional>;
export declare type BarcodeGs1DataBarStackedOmnidirectionalRef = wjcReactBase.WjRef<wjcBarcodeComposite.Gs1DataBarStackedOmnidirectional>;
/**
 * React component for the {@link wijmo.barcode.composite.Gs1DataBarStackedOmnidirectional} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.composite.Gs1DataBarStackedOmnidirectional} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeGs1DataBarStackedOmnidirectional: React.ForwardRefExoticComponent<BarcodeGs1DataBarStackedOmnidirectionalProps>;
export declare type BarcodeGs1DataBarLimitedInputs = BarcodeGs1DataBarBaseInputs & {};
export declare type BarcodeGs1DataBarLimitedEvents<T> = BarcodeGs1DataBarBaseEvents<T> & {};
export declare const BarcodeGs1DataBarLimitedMeta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeGs1DataBarLimitedProps = BarcodeGs1DataBarLimitedInputs & BarcodeGs1DataBarLimitedEvents<wjcBarcodeComposite.Gs1DataBarLimited>;
export declare type BarcodeGs1DataBarLimitedRef = wjcReactBase.WjRef<wjcBarcodeComposite.Gs1DataBarLimited>;
/**
 * React component for the {@link wijmo.barcode.composite.Gs1DataBarLimited} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.composite.Gs1DataBarLimited} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeGs1DataBarLimited: React.ForwardRefExoticComponent<BarcodeGs1DataBarLimitedProps>;
export declare type BarcodeGs1DataBarExpandedInputs = BarcodeGs1DataBarBaseInputs & {
    autoWidth?: boolean;
    autoWidthZoom?: number;
};
export declare type BarcodeGs1DataBarExpandedEvents<T> = BarcodeGs1DataBarBaseEvents<T> & {};
export declare const BarcodeGs1DataBarExpandedMeta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeGs1DataBarExpandedProps = BarcodeGs1DataBarExpandedInputs & BarcodeGs1DataBarExpandedEvents<wjcBarcodeComposite.Gs1DataBarExpanded>;
export declare type BarcodeGs1DataBarExpandedRef = wjcReactBase.WjRef<wjcBarcodeComposite.Gs1DataBarExpanded>;
/**
 * React component for the {@link wijmo.barcode.composite.Gs1DataBarExpanded} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.composite.Gs1DataBarExpanded} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeGs1DataBarExpanded: React.ForwardRefExoticComponent<BarcodeGs1DataBarExpandedProps>;
export declare type BarcodeGs1DataBarExpandedStackedInputs = BarcodeGs1DataBarBaseInputs & {
    autoWidth?: boolean;
    autoWidthZoom?: number;
    rowCount?: number;
};
export declare type BarcodeGs1DataBarExpandedStackedEvents<T> = BarcodeGs1DataBarBaseEvents<T> & {};
export declare const BarcodeGs1DataBarExpandedStackedMeta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeGs1DataBarExpandedStackedProps = BarcodeGs1DataBarExpandedStackedInputs & BarcodeGs1DataBarExpandedStackedEvents<wjcBarcodeComposite.Gs1DataBarExpandedStacked>;
export declare type BarcodeGs1DataBarExpandedStackedRef = wjcReactBase.WjRef<wjcBarcodeComposite.Gs1DataBarExpandedStacked>;
/**
 * React component for the {@link wijmo.barcode.composite.Gs1DataBarExpandedStacked} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.composite.Gs1DataBarExpandedStacked} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeGs1DataBarExpandedStacked: React.ForwardRefExoticComponent<BarcodeGs1DataBarExpandedStackedProps>;
export declare type BarcodePdf417Inputs = BarcodeBaseInputs & {
    autoWidth?: boolean;
    autoWidthZoom?: number;
    columns?: number;
    compact?: boolean;
    errorCorrectionLevel?: number;
    rows?: number;
};
export declare type BarcodePdf417Events<T> = BarcodeBaseEvents<T> & {};
export declare const BarcodePdf417Meta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodePdf417Props = BarcodePdf417Inputs & BarcodePdf417Events<wjcBarcodeComposite.Pdf417>;
export declare type BarcodePdf417Ref = wjcReactBase.WjRef<wjcBarcodeComposite.Pdf417>;
/**
 * React component for the {@link wijmo.barcode.composite.Pdf417} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.composite.Pdf417} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodePdf417: React.ForwardRefExoticComponent<BarcodePdf417Props>;
export declare type BarcodeMicroPdf417Inputs = BarcodeBaseInputs & {
    compactionMode?: wjcBarcodeComposite.MicroPdfCompactionMode | string;
    dimensions?: wjcBarcodeComposite.MicroPdfDimensions | string;
    fileId?: number;
    optionalFields?: wjcBarcodeComposite.IOptionalFields;
    segmentIndex?: number;
    structuredAppend?: boolean;
};
export declare type BarcodeMicroPdf417Events<T> = BarcodeBaseEvents<T> & {};
export declare const BarcodeMicroPdf417Meta: {
    inputs: string[];
    events: string[];
};
export declare type BarcodeMicroPdf417Props = BarcodeMicroPdf417Inputs & BarcodeMicroPdf417Events<wjcBarcodeComposite.MicroPdf417>;
export declare type BarcodeMicroPdf417Ref = wjcReactBase.WjRef<wjcBarcodeComposite.MicroPdf417>;
/**
 * React component for the {@link wijmo.barcode.composite.MicroPdf417} control.
 *
 * The component supports all properties and events of the pure JavaScript {@link wijmo.barcode.composite.MicroPdf417} control it represents.
 *
 * The component includes an <b>initialized</b> event that is raised when the control is initialized after it is added to the page.
 * You can use this event to perform further initialization in addition to setting properties in JSX.
 * The signature of the handler function is the same as any other Wijmo event handlers.
 */
export declare const BarcodeMicroPdf417: React.ForwardRefExoticComponent<BarcodeMicroPdf417Props>;
